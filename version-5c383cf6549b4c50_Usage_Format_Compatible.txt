using r_addinfo_typedef = int(addinfo_CCV*)(int a1);
r_addinfo_typedef r_addinfo = (r_addinfo_typedef)(x(Adresses::addinfo_addr));

using r_adjuststack_typedef = int(adjuststack_CCV*)(int a1);
r_adjuststack_typedef r_adjuststack = (r_adjuststack_typedef)(x(Adresses::adjuststack_addr));

using r_arith_typedef = int(arith_CCV*)(std::uintptr_t a1, int a2, int a3);
r_arith_typedef r_arith = (r_arith_typedef)(x(Adresses::arith_addr));

using r_aux_upvalue_typedef = int(aux_upvalue_CCV*)(std::uintptr_t a1, int a2, int a3);
r_aux_upvalue_typedef r_aux_upvalue = (r_aux_upvalue_typedef)(x(Adresses::aux_upvalue_addr));

using r_auxgetinfo_typedef = int(auxgetinfo_CCV*)(std::uintptr_t a1, int a2, int a3, int a4, int a5);
r_auxgetinfo_typedef r_auxgetinfo = (r_auxgetinfo_typedef)(x(Adresses::auxgetinfo_addr));

using r_auxresume_typedef = int(auxresume_CCV*)(std::uintptr_t a1, int a2, int a3);
r_auxresume_typedef r_auxresume = (r_auxresume_typedef)(x(Adresses::auxresume_addr));

using r_call_bintm_typedef = int(call_bintm_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_call_bintm_typedef r_call_bintm = (r_call_bintm_typedef)(x(Adresses::call_bintm_addr));

using r_call_ordertm_typedef = int(call_ordertm_CCV*)(std::uintptr_t a1, int a2);
r_call_ordertm_typedef r_call_ordertm = (r_call_ordertm_typedef)(x(Adresses::call_ordertm_addr));

using r_calltmres_typedef = int(calltmres_CCV*)(std::uintptr_t a1, int a2, int a3, int a4, int a5);
r_calltmres_typedef r_calltmres = (r_calltmres_typedef)(x(Adresses::calltmres_addr));

using r_close_state_typedef = int(close_state_CCV*)(int a1);
r_close_state_typedef r_close_state = (r_close_state_typedef)(x(Adresses::close_state_addr));

using r_currentline_typedef = int(currentline_CCV*)(std::uintptr_t a1, int a2);
r_currentline_typedef r_currentline = (r_currentline_typedef)(x(Adresses::currentline_addr));

using r_err_geterrorstring_typedef = int(err_geterrorstring_CCV*)(int a1);
r_err_geterrorstring_typedef r_err_geterrorstring = (r_err_geterrorstring_typedef)(x(Adresses::err_geterrorstring_addr));

using r_f_call_typedef = int(f_call_CCV*)(std::uintptr_t a1, int a2);
r_f_call_typedef r_f_call = (r_f_call_typedef)unprotect(x(Adresses::f_call_addr));

using r_f_luaopen_typedef = int(f_luaopen_CCV*)(int a1);
r_f_luaopen_typedef r_f_luaopen = (r_f_luaopen_typedef)(x(Adresses::f_luaopen_addr));

using r_findfirstchild_typedef = int(findfirstchild_CCV*)(int a1, int a2);
r_findfirstchild_typedef r_findfirstchild = (r_findfirstchild_typedef)(x(Adresses::findfirstchild_addr));

using r_findfirstchildofclass_typedef = int(findfirstchildofclass_CCV*)(int a1, int a2);
r_findfirstchildofclass_typedef r_findfirstchildofclass = (r_findfirstchildofclass_typedef)(x(Adresses::findfirstchildofclass_addr));

using r_findlocal_typedef = int(findlocal_CCV*)(std::uintptr_t a1, int a2, int a3);
r_findlocal_typedef r_findlocal = (r_findlocal_typedef)(x(Adresses::findlocal_addr));

using r_fireclickdetector_typedef = int(fireclickdetector_CCV*)(std::uintptr_t a1, float a2, int a3);
r_fireclickdetector_typedef r_fireclickdetector = (r_fireclickdetector_typedef)(x(Adresses::fireclickdetector_addr));

using r_flog_getvalue_typedef = int(flog_getvalue_CCV*)(int a1, int a2, const char* a3);
r_flog_getvalue_typedef r_flog_getvalue = (r_flog_getvalue_typedef)(x(Adresses::flog_getvalue_addr));

using r_flog_setvalue_typedef = int(flog_setvalue_CCV*)(int a1, int a2, int a3, const char* a4);
r_flog_setvalue_typedef r_flog_setvalue = (r_flog_setvalue_typedef)(x(Adresses::flog_setvalue_addr));

using r_getdatamodel_typedef = int(getdatamodel_CCV*)(int a1, int a2);
r_getdatamodel_typedef r_getdatamodel = (r_getdatamodel_typedef)(x(Adresses::getdatamodel_addr));

using r_getdatamodel2_typedef = int(getdatamodel2_CCV*)();
r_getdatamodel2_typedef r_getdatamodel2 = (r_getdatamodel2_typedef)(x(Adresses::getdatamodel2_addr));

using r_getfunc_typedef = int(getfunc_CCV*)(std::uintptr_t a1, int a2);
r_getfunc_typedef r_getfunc = (r_getfunc_typedef)(x(Adresses::getfunc_addr));

using r_getjobsbyname_typedef = int(getjobsbyname_CCV*)(int a1, int a2);
r_getjobsbyname_typedef r_getjobsbyname = (r_getjobsbyname_typedef)(x(Adresses::getjobsbyname_addr));

using r_getnamecallmethod_typedef = int(getnamecallmethod_CCV*)(int a1);
r_getnamecallmethod_typedef r_getnamecallmethod = (r_getnamecallmethod_typedef)(x(Adresses::getnamecallmethod_addr));

using r_grabscriptcontext_typedef = int(grabscriptcontext_CCV*)(int a1, const char* a2, int a3);
r_grabscriptcontext_typedef r_grabscriptcontext = (r_grabscriptcontext_typedef)(x(Adresses::grabscriptcontext_addr));

using r_grabglobalstateindex_typedef = int(grabglobalstateindex_CCV*)(int a1, int a2);
r_grabglobalstateindex_typedef r_grabglobalstateindex = (r_grabglobalstateindex_typedef)(x(Adresses::grabglobalstateindex_addr));

using r_growci_typedef = int(growci_CCV*)(int a1);
r_growci_typedef r_growci = (r_growci_typedef)(x(Adresses::growci_addr));

using r_hashnum_typedef = int(hashnum_CCV*)(std::uintptr_t a1, int a2, int a3);
r_hashnum_typedef r_hashnum = (r_hashnum_typedef)(x(Adresses::hashnum_addr));

using r_index2adr_typedef = int(index2adr_CCV*)(std::uintptr_t a1, int a2);
r_index2adr_typedef r_index2adr = (r_index2adr_typedef)(x(Adresses::index2adr_addr));

using r_luaopen_base_typedef = int(luaopen_base_CCV*)(int a1);
r_luaopen_base_typedef r_luaopen_base = (r_luaopen_base_typedef)(x(Adresses::luaopen_base_addr));

using r_luaopen_table_typedef = int(luaopen_table_CCV*)(int a1);
r_luaopen_table_typedef r_luaopen_table = (r_luaopen_table_typedef)(x(Adresses::luaopen_table_addr));

using r_luaopen_bit32_typedef = int(luaopen_bit32_CCV*)(int a1);
r_luaopen_bit32_typedef r_luaopen_bit32 = (r_luaopen_bit32_typedef)(x(Adresses::luaopen_bit32_addr));

using r_lua_call_typedef = int(lua_call_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_call_typedef r_lua_call = (r_lua_call_typedef)unprotect(x(Adresses::lua_call_addr));

using r_lua_checkstack_typedef = int(lua_checkstack_CCV*)(std::uintptr_t a1, int a2);
r_lua_checkstack_typedef r_lua_checkstack = (r_lua_checkstack_typedef)unprotect(x(Adresses::lua_checkstack_addr));

using r_lua_close_typedef = int(lua_close_CCV*)(int a1);
r_lua_close_typedef r_lua_close = (r_lua_close_typedef)(x(Adresses::lua_close_addr));

using r_lua_concat_typedef = int(lua_concat_CCV*)(std::uintptr_t a1, int a2);
r_lua_concat_typedef r_lua_concat = (r_lua_concat_typedef)unprotect(x(Adresses::lua_concat_addr));

using r_lua_createtable_typedef = int(lua_createtable_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_createtable_typedef r_lua_createtable = (r_lua_createtable_typedef)unprotect(x(Adresses::lua_createtable_addr));

using r_lua_error_typedef = int(lua_error_CCV*)(int a1);
r_lua_error_typedef r_lua_error = (r_lua_error_typedef)(x(Adresses::lua_error_addr));

using r_lua_freeobj_typedef = int(lua_freeobj_CCV*)(int a1);
r_lua_freeobj_typedef r_lua_freeobj = (r_lua_freeobj_typedef)(x(Adresses::lua_freeobj_addr));

using r_lua_gc_typedef = int(lua_gc_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_gc_typedef r_lua_gc = (r_lua_gc_typedef)(x(Adresses::lua_gc_addr));

using r_lua_getargument_typedef = int(lua_getargument_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_getargument_typedef r_lua_getargument = (r_lua_getargument_typedef)unprotect(x(Adresses::lua_getargument_addr));

using r_lua_getfenv_typedef = int(lua_getfenv_CCV*)(std::uintptr_t a1, int a2);
r_lua_getfenv_typedef r_lua_getfenv = (r_lua_getfenv_typedef)unprotect(x(Adresses::lua_getfenv_addr));

using r_lua_getfield_typedef = int(lua_getfield_CCV*)(std::uintptr_t a1, int a2, const char* a3);
r_lua_getfield_typedef r_lua_getfield = (r_lua_getfield_typedef)unprotect(x(Adresses::lua_getfield_addr));

using r_lua_getinfo_typedef = int(lua_getinfo_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_getinfo_typedef r_lua_getinfo = (r_lua_getinfo_typedef)unprotect(x(Adresses::lua_getinfo_addr));

using r_lua_getlocal_typedef = int(lua_getlocal_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_getlocal_typedef r_lua_getlocal = (r_lua_getlocal_typedef)unprotect(x(Adresses::lua_getlocal_addr));

using r_lua_getmetatable_typedef = int(lua_getmetatable_CCV*)(std::uintptr_t a1, int a2);
r_lua_getmetatable_typedef r_lua_getmetatable = (r_lua_getmetatable_typedef)(x(Adresses::lua_getmetatable_addr));

using r_lua_getstack_typedef = int(lua_getstack_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_getstack_typedef r_lua_getstack = (r_lua_getstack_typedef)(x(Adresses::lua_getstack_addr));

using r_lua_gettable_typedef = int(lua_gettable_CCV*)(std::uintptr_t a1, int a2);
r_lua_gettable_typedef r_lua_gettable = (r_lua_gettable_typedef)unprotect(x(Adresses::lua_gettable_addr));

using r_lua_gettop_typedef = int(lua_gettop_CCV*)(int a1);
r_lua_gettop_typedef r_lua_gettop = (r_lua_gettop_typedef)(x(Adresses::lua_gettop_addr));

using r_lua_getupvalue_typedef = int(lua_getupvalue_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_getupvalue_typedef r_lua_getupvalue = (r_lua_getupvalue_typedef)unprotect(x(Adresses::lua_getupvalue_addr));

using r_lua_insert_typedef = int(lua_insert_CCV*)(std::uintptr_t a1, int a2);
r_lua_insert_typedef r_lua_insert = (r_lua_insert_typedef)unprotect(x(Adresses::lua_insert_addr));

using r_lua_iscfunction_typedef = int(lua_iscfunction_CCV*)(std::uintptr_t a1, int a2);
r_lua_iscfunction_typedef r_lua_iscfunction = (r_lua_iscfunction_typedef)(x(Adresses::lua_iscfunction_addr));

using r_lua_isnumber_typedef = int(lua_isnumber_CCV*)(std::uintptr_t a1, int a2);
r_lua_isnumber_typedef r_lua_isnumber = (r_lua_isnumber_typedef)(x(Adresses::lua_isnumber_addr));

using r_lua_isstring_typedef = int(lua_isstring_CCV*)(std::uintptr_t a1, int a2);
r_lua_isstring_typedef r_lua_isstring = (r_lua_isstring_typedef)(x(Adresses::lua_isstring_addr));

using r_lua_isuserdata_typedef = int(lua_isuserdata_CCV*)(std::uintptr_t a1, int a2);
r_lua_isuserdata_typedef r_lua_isuserdata = (r_lua_isuserdata_typedef)(x(Adresses::lua_isuserdata_addr));

using r_lua_lessthan_typedef = int(lua_lessthan_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_lessthan_typedef r_lua_lessthan = (r_lua_lessthan_typedef)unprotect(x(Adresses::lua_lessthan_addr));

using r_lua_newstate_typedef = int(lua_newstate_CCV*)(int a1);
r_lua_newstate_typedef r_lua_newstate = (r_lua_newstate_typedef)(x(Adresses::lua_newstate_addr));

using r_lua_newthread_typedef = int(lua_newthread_CCV*)(int a1);
r_lua_newthread_typedef r_lua_newthread = (r_lua_newthread_typedef)unprotect(x(Adresses::lua_newthread_addr));

using r_lua_newuserdata_typedef = int(lua_newuserdata_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_newuserdata_typedef r_lua_newuserdata = (r_lua_newuserdata_typedef)unprotect(x(Adresses::lua_newuserdata_addr));

using r_lua_next_typedef = int(lua_next_CCV*)(std::uintptr_t a1, int a2);
r_lua_next_typedef r_lua_next = (r_lua_next_typedef)unprotect(x(Adresses::lua_next_addr));

using r_lua_objlen_typedef = int(lua_objlen_CCV*)(std::uintptr_t a1, int a2);
r_lua_objlen_typedef r_lua_objlen = (r_lua_objlen_typedef)(x(Adresses::lua_objlen_addr));

using r_lua_pcall_typedef = int(lua_pcall_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_lua_pcall_typedef r_lua_pcall = (r_lua_pcall_typedef)unprotect(x(Adresses::lua_pcall_addr));

using r_lua_pushboolean_typedef = int(lua_pushboolean_CCV*)(std::uintptr_t a1, int a2);
r_lua_pushboolean_typedef r_lua_pushboolean = (r_lua_pushboolean_typedef)unprotect(x(Adresses::lua_pushboolean_addr));

using r_lua_pushcclosure_typedef = int(lua_pushcclosure_CCV*)(std::uintptr_t a1, int a2, int a3, int a4, int a5);
r_lua_pushcclosure_typedef r_lua_pushcclosure = (r_lua_pushcclosure_typedef)unprotect(x(Adresses::lua_pushcclosure_addr));

using r_lua_pushfstring_typedef = int(lua_pushfstring_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_pushfstring_typedef r_lua_pushfstring = (r_lua_pushfstring_typedef)(x(Adresses::lua_pushfstring_addr));

using r_lua_pushinteger_typedef = int(lua_pushinteger_CCV*)(std::uintptr_t a1, int a2);
r_lua_pushinteger_typedef r_lua_pushinteger = (r_lua_pushinteger_typedef)unprotect(x(Adresses::lua_pushinteger_addr));

using r_lua_pushlightuserdata_typedef = int(lua_pushlightuserdata_CCV*)(std::uintptr_t a1, int a2);
r_lua_pushlightuserdata_typedef r_lua_pushlightuserdata = (r_lua_pushlightuserdata_typedef)unprotect(x(Adresses::lua_pushlightuserdata_addr));

using r_lua_pushlstring_typedef = int(lua_pushlstring_CCV*)(std::uintptr_t a1, const char* a2, int a3);
r_lua_pushlstring_typedef r_lua_pushlstring = (r_lua_pushlstring_typedef)unprotect(x(Adresses::lua_pushlstring_addr));

using r_lua_pushnil_typedef = int(lua_pushnil_CCV*)(int a1);
r_lua_pushnil_typedef r_lua_pushnil = (r_lua_pushnil_typedef)unprotect(x(Adresses::lua_pushnil_addr));

using r_lua_pushnumber_typedef = int(lua_pushnumber_CCV*)(std::uintptr_t a1, int a2);
r_lua_pushnumber_typedef r_lua_pushnumber = (r_lua_pushnumber_typedef)unprotect(x(Adresses::lua_pushnumber_addr));

using r_lua_pushstring_typedef = int(lua_pushstring_CCV*)(std::uintptr_t a1, const char* a2);
r_lua_pushstring_typedef r_lua_pushstring = (r_lua_pushstring_typedef)unprotect(x(Adresses::lua_pushstring_addr));

using r_lua_pushthread_typedef = int(lua_pushthread_CCV*)(int a1);
r_lua_pushthread_typedef r_lua_pushthread = (r_lua_pushthread_typedef)unprotect(x(Adresses::lua_pushthread_addr));

using r_lua_pushvalue_typedef = int(lua_pushvalue_CCV*)(std::uintptr_t a1, int a2);
r_lua_pushvalue_typedef r_lua_pushvalue = (r_lua_pushvalue_typedef)unprotect(x(Adresses::lua_pushvalue_addr));

using r_lua_pushvfstring_typedef = int(lua_pushvfstring_CCV*)(std::uintptr_t a1, const char* a2, char* a3);
r_lua_pushvfstring_typedef r_lua_pushvfstring = (r_lua_pushvfstring_typedef)(x(Adresses::lua_pushvfstring_addr));

using r_lua_rawequal_typedef = int(lua_rawequal_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_rawequal_typedef r_lua_rawequal = (r_lua_rawequal_typedef)(x(Adresses::lua_rawequal_addr));

using r_lua_rawget_typedef = int(lua_rawget_CCV*)(std::uintptr_t a1, int a2);
r_lua_rawget_typedef r_lua_rawget = (r_lua_rawget_typedef)unprotect(x(Adresses::lua_rawget_addr));

using r_lua_rawgeti_typedef = int(lua_rawgeti_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_rawgeti_typedef r_lua_rawgeti = (r_lua_rawgeti_typedef)unprotect(x(Adresses::lua_rawgeti_addr));

using r_lua_rawset_typedef = int(lua_rawset_CCV*)(std::uintptr_t a1, int a2);
r_lua_rawset_typedef r_lua_rawset = (r_lua_rawset_typedef)unprotect(x(Adresses::lua_rawset_addr));

using r_lua_rawseti_typedef = int(lua_rawseti_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_rawseti_typedef r_lua_rawseti = (r_lua_rawseti_typedef)unprotect(x(Adresses::lua_rawseti_addr));

using r_lua_rawvalue_typedef = int(lua_rawvalue_CCV*)(std::uintptr_t a1, int a2);
r_lua_rawvalue_typedef r_lua_rawvalue = (r_lua_rawvalue_typedef)(x(Adresses::lua_rawvalue_addr));

using r_lua_remove_typedef = int(lua_remove_CCV*)(std::uintptr_t a1, int a2);
r_lua_remove_typedef r_lua_remove = (r_lua_remove_typedef)unprotect(x(Adresses::lua_remove_addr));

using r_lua_replace_typedef = int(lua_replace_CCV*)(std::uintptr_t a1, int a2);
r_lua_replace_typedef r_lua_replace = (r_lua_replace_typedef)unprotect(x(Adresses::lua_replace_addr));

using r_lua_resume_typedef = int(lua_resume_CCV*)(std::uintptr_t a1, int a2);
r_lua_resume_typedef r_lua_resume = (r_lua_resume_typedef)unprotect(x(Adresses::lua_resume_addr));

using r_lua_setfenv_typedef = int(lua_setfenv_CCV*)(std::uintptr_t a1, int a2);
r_lua_setfenv_typedef r_lua_setfenv = (r_lua_setfenv_typedef)(x(Adresses::lua_setfenv_addr));

using r_lua_setfield_typedef = int(lua_setfield_CCV*)(std::uintptr_t a1, int a2, const char* a3);
r_lua_setfield_typedef r_lua_setfield = (r_lua_setfield_typedef)unprotect(x(Adresses::lua_setfield_addr));

using r_lua_setlocal_typedef = int(lua_setlocal_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_setlocal_typedef r_lua_setlocal = (r_lua_setlocal_typedef)unprotect(x(Adresses::lua_setlocal_addr));

using r_lua_setmetatable_typedef = int(lua_setmetatable_CCV*)(std::uintptr_t a1, int a2);
r_lua_setmetatable_typedef r_lua_setmetatable = (r_lua_setmetatable_typedef)unprotect(x(Adresses::lua_setmetatable_addr));

using r_lua_setreadonly_typedef = int(lua_setreadonly_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_setreadonly_typedef r_lua_setreadonly = (r_lua_setreadonly_typedef)unprotect(x(Adresses::lua_setreadonly_addr));

using r_lua_setsafeenv_typedef = int(lua_setsafeenv_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_setsafeenv_typedef r_lua_setsafeenv = (r_lua_setsafeenv_typedef)unprotect(x(Adresses::lua_setsafeenv_addr));

using r_lua_settable_typedef = int(lua_settable_CCV*)(std::uintptr_t a1, int a2);
r_lua_settable_typedef r_lua_settable = (r_lua_settable_typedef)unprotect(x(Adresses::lua_settable_addr));

using r_lua_settop_typedef = int(lua_settop_CCV*)(std::uintptr_t a1, int a2);
r_lua_settop_typedef r_lua_settop = (r_lua_settop_typedef)unprotect(x(Adresses::lua_settop_addr));

using r_lua_setupvalue_typedef = int(lua_setupvalue_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_setupvalue_typedef r_lua_setupvalue = (r_lua_setupvalue_typedef)unprotect(x(Adresses::lua_setupvalue_addr));

using r_lua_toboolean_typedef = int(lua_toboolean_CCV*)(std::uintptr_t a1, int a2);
r_lua_toboolean_typedef r_lua_toboolean = (r_lua_toboolean_typedef)(x(Adresses::lua_toboolean_addr));

using r_lua_tointeger_typedef = int(lua_tointeger_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_tointeger_typedef r_lua_tointeger = (r_lua_tointeger_typedef)(x(Adresses::lua_tointeger_addr));

using r_lua_tolstring_typedef = int(lua_tolstring_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_tolstring_typedef r_lua_tolstring = (r_lua_tolstring_typedef)unprotect(x(Adresses::lua_tolstring_addr));

using r_lua_tonumber_typedef = int(lua_tonumber_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_tonumber_typedef r_lua_tonumber = (r_lua_tonumber_typedef)(x(Adresses::lua_tonumber_addr));

using r_lua_topointer_typedef = int(lua_topointer_CCV*)(std::uintptr_t a1, int a2);
r_lua_topointer_typedef r_lua_topointer = (r_lua_topointer_typedef)(x(Adresses::lua_topointer_addr));

using r_lua_tostring_typedef = int(lua_tostring_CCV*)(std::uintptr_t a1, int a2);
r_lua_tostring_typedef r_lua_tostring = (r_lua_tostring_typedef)(x(Adresses::lua_tostring_addr));

using r_lua_tothread_typedef = int(lua_tothread_CCV*)(std::uintptr_t a1, int a2);
r_lua_tothread_typedef r_lua_tothread = (r_lua_tothread_typedef)(x(Adresses::lua_tothread_addr));

using r_lua_tounsignedx_typedef = int(lua_tounsignedx_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_tounsignedx_typedef r_lua_tounsignedx = (r_lua_tounsignedx_typedef)(x(Adresses::lua_tounsignedx_addr));

using r_lua_touserdata_typedef = int(lua_touserdata_CCV*)(std::uintptr_t a1, int a2);
r_lua_touserdata_typedef r_lua_touserdata = (r_lua_touserdata_typedef)(x(Adresses::lua_touserdata_addr));

using r_lua_type_typedef = int(lua_type_CCV*)(std::uintptr_t a1, int a2);
r_lua_type_typedef r_lua_type = (r_lua_type_typedef)(x(Adresses::lua_type_addr));

using r_lua_typename_typedef = int(lua_typename_CCV*)(std::uintptr_t a1, int a2);
r_lua_typename_typedef r_lua_typename = (r_lua_typename_typedef)(x(Adresses::lua_typename_addr));

using r_lua_xmove_typedef = int(lua_xmove_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lua_xmove_typedef r_lua_xmove = (r_lua_xmove_typedef)unprotect(x(Adresses::lua_xmove_addr));

using r_lua_yeild_typedef = int(lua_yeild_CCV*)(std::uintptr_t a1, int a2);
r_lua_yeild_typedef r_lua_yeild = (r_lua_yeild_typedef)unprotect(x(Adresses::lua_yeild_addr));

using r_luaa_pushobject_typedef = int(luaa_pushobject_CCV*)(std::uintptr_t a1, int a2);
r_luaa_pushobject_typedef r_luaa_pushobject = (r_luaa_pushobject_typedef)(x(Adresses::luaa_pushobject_addr));

using r_luab_auxwrap_typedef = int(luab_auxwrap_CCV*)(int a1);
r_luab_auxwrap_typedef r_luab_auxwrap = (r_luab_auxwrap_typedef)(x(Adresses::luab_auxwrap_addr));

using r_luac_barrierback_typedef = int(luac_barrierback_CCV*)(std::uintptr_t a1, int a2);
r_luac_barrierback_typedef r_luac_barrierback = (r_luac_barrierback_typedef)(x(Adresses::luac_barrierback_addr));

using r_luac_barrierf_typedef = int(luac_barrierf_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luac_barrierf_typedef r_luac_barrierf = (r_luac_barrierf_typedef)(x(Adresses::luac_barrierf_addr));

using r_luac_fullgc_typedef = int(luac_fullgc_CCV*)(int a1);
r_luac_fullgc_typedef r_luac_fullgc = (r_luac_fullgc_typedef)(x(Adresses::luac_fullgc_addr));

using r_luac_link_typedef = int(luac_link_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luac_link_typedef r_luac_link = (r_luac_link_typedef)(x(Adresses::luac_link_addr));

using r_luac_linkupval_typedef = int(luac_linkupval_CCV*)(std::uintptr_t a1, int a2);
r_luac_linkupval_typedef r_luac_linkupval = (r_luac_linkupval_typedef)(x(Adresses::luac_linkupval_addr));

using r_luac_step_typedef = int(luac_step_CCV*)(int a1);
r_luac_step_typedef r_luac_step = (r_luac_step_typedef)(x(Adresses::luac_step_addr));

using r_luad_call_typedef = int(luad_call_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luad_call_typedef r_luad_call = (r_luad_call_typedef)(x(Adresses::luad_call_addr));

using r_luad_growstack_typedef = int(luad_growstack_CCV*)(std::uintptr_t a1, int a2);
r_luad_growstack_typedef r_luad_growstack = (r_luad_growstack_typedef)(x(Adresses::luad_growstack_addr));

using r_luad_pcall_typedef = int(luad_pcall_CCV*)(std::uintptr_t a1, int a2, int a3, int a4, int a5);
r_luad_pcall_typedef r_luad_pcall = (r_luad_pcall_typedef)(x(Adresses::luad_pcall_addr));

using r_luad_poscall_typedef = int(luad_poscall_CCV*)(std::uintptr_t a1, int a2);
r_luad_poscall_typedef r_luad_poscall = (r_luad_poscall_typedef)(x(Adresses::luad_poscall_addr));

using r_luad_precall_typedef = int(luad_precall_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luad_precall_typedef r_luad_precall = (r_luad_precall_typedef)(x(Adresses::luad_precall_addr));

using r_luad_rawrunprotected_typedef = int(luad_rawrunprotected_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luad_rawrunprotected_typedef r_luad_rawrunprotected = (r_luad_rawrunprotected_typedef)(x(Adresses::luad_rawrunprotected_addr));

using r_luad_reallocci_typedef = int(luad_reallocci_CCV*)(std::uintptr_t a1, int a2);
r_luad_reallocci_typedef r_luad_reallocci = (r_luad_reallocci_typedef)(x(Adresses::luad_reallocci_addr));

using r_luad_reallocstack_typedef = int(luad_reallocstack_CCV*)(std::uintptr_t a1, int a2);
r_luad_reallocstack_typedef r_luad_reallocstack = (r_luad_reallocstack_typedef)(x(Adresses::luad_reallocstack_addr));

using r_luad_seterrorObj_typedef = int(luad_seterrorObj_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luad_seterrorObj_typedef r_luad_seterrorObj = (r_luad_seterrorObj_typedef)(x(Adresses::luad_seterrorObj_addr));

using r_luad_throw_typedef = int(luad_throw_CCV*)(std::uintptr_t a1, int a2);
r_luad_throw_typedef r_luad_throw = (r_luad_throw_typedef)(x(Adresses::luad_throw_addr));

using r_luae_freethread_typedef = int(luae_freethread_CCV*)(std::uintptr_t a1, int a2);
r_luae_freethread_typedef r_luae_freethread = (r_luae_freethread_typedef)(x(Adresses::luae_freethread_addr));

using r_luae_newthread_typedef = int(luae_newthread_CCV*)(int a1);
r_luae_newthread_typedef r_luae_newthread = (r_luae_newthread_typedef)(x(Adresses::luae_newthread_addr));

using r_luaf_close_typedef = int(luaf_close_CCV*)(std::uintptr_t a1, int a2);
r_luaf_close_typedef r_luaf_close = (r_luaf_close_typedef)(x(Adresses::luaf_close_addr));

using r_luaf_findupval_typedef = int(luaf_findupval_CCV*)(std::uintptr_t a1, int a2);
r_luaf_findupval_typedef r_luaf_findupval = (r_luaf_findupval_typedef)(x(Adresses::luaf_findupval_addr));

using r_luaf_freeproto_typedef = int(luaf_freeproto_CCV*)(std::uintptr_t a1, int a2);
r_luaf_freeproto_typedef r_luaf_freeproto = (r_luaf_freeproto_typedef)(x(Adresses::luaf_freeproto_addr));

using r_luaf_newcclosure_typedef = int(luaf_newcclosure_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luaf_newcclosure_typedef r_luaf_newcclosure = (r_luaf_newcclosure_typedef)(x(Adresses::luaf_newcclosure_addr));

using r_luaf_newlclosure_typedef = int(luaf_newlclosure_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_luaf_newlclosure_typedef r_luaf_newlclosure = (r_luaf_newlclosure_typedef)(x(Adresses::luaf_newlclosure_addr));

using r_luaf_newproto_typedef = int(luaf_newproto_CCV*)(int a1);
r_luaf_newproto_typedef r_luaf_newproto = (r_luaf_newproto_typedef)(x(Adresses::luaf_newproto_addr));

using r_luag_aritherror_typedef = int(luag_aritherror_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_luag_aritherror_typedef r_luag_aritherror = (r_luag_aritherror_typedef)(x(Adresses::luag_aritherror_addr));

using r_luag_breakpoint_typedef = int(luag_breakpoint_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_luag_breakpoint_typedef r_luag_breakpoint = (r_luag_breakpoint_typedef)(x(Adresses::luag_breakpoint_addr));

using r_luag_concaterror_typedef = int(luag_concaterror_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luag_concaterror_typedef r_luag_concaterror = (r_luag_concaterror_typedef)(x(Adresses::luag_concaterror_addr));

using r_luag_forerrorl_typedef = int(luag_forerrorl_CCV*)(std::uintptr_t a1, int a2, const char* a3);
r_luag_forerrorl_typedef r_luag_forerrorl = (r_luag_forerrorl_typedef)(x(Adresses::luag_forerrorl_addr));

using r_luag_getline_typedef = int(luag_getline_CCV*)(std::uintptr_t a1, int a2);
r_luag_getline_typedef r_luag_getline = (r_luag_getline_typedef)(x(Adresses::luag_getline_addr));

using r_luag_indexerror_typedef = int(luag_indexerror_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luag_indexerror_typedef r_luag_indexerror = (r_luag_indexerror_typedef)(x(Adresses::luag_indexerror_addr));

using r_luag_ordererror_typedef = int(luag_ordererror_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luag_ordererror_typedef r_luag_ordererror = (r_luag_ordererror_typedef)(x(Adresses::luag_ordererror_addr));

using r_luag_runerror_typedef = int(luag_runerror_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luag_runerror_typedef r_luag_runerror = (r_luag_runerror_typedef)(x(Adresses::luag_runerror_addr));

using r_luag_typeerror_typedef = int(luag_typeerror_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luag_typeerror_typedef r_luag_typeerror = (r_luag_typeerror_typedef)(x(Adresses::luag_typeerror_addr));

using r_luah_clone_typedef = int(luah_clone_CCV*)(std::uintptr_t a1, int a2);
r_luah_clone_typedef r_luah_clone = (r_luah_clone_typedef)(x(Adresses::luah_clone_addr));

using r_luah_free_typedef = int(luah_free_CCV*)(std::uintptr_t a1, int a2);
r_luah_free_typedef r_luah_free = (r_luah_free_typedef)(x(Adresses::luah_free_addr));

using r_luah_get_typedef = int(luah_get_CCV*)(std::uintptr_t a1, int a2);
r_luah_get_typedef r_luah_get = (r_luah_get_typedef)(x(Adresses::luah_get_addr));

using r_luah_getn_typedef = int(luah_getn_CCV*)(int a1);
r_luah_getn_typedef r_luah_getn = (r_luah_getn_typedef)(x(Adresses::luah_getn_addr));

using r_luah_getnum_typedef = int(luah_getnum_CCV*)(std::uintptr_t a1, int a2);
r_luah_getnum_typedef r_luah_getnum = (r_luah_getnum_typedef)(x(Adresses::luah_getnum_addr));

using r_luah_getstr_typedef = int(luah_getstr_CCV*)(std::uintptr_t a1, int a2);
r_luah_getstr_typedef r_luah_getstr = (r_luah_getstr_typedef)(x(Adresses::luah_getstr_addr));

using r_luah_new_typedef = int(luah_new_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luah_new_typedef r_luah_new = (r_luah_new_typedef)(x(Adresses::luah_new_addr));

using r_luah_next_typedef = int(luah_next_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luah_next_typedef r_luah_next = (r_luah_next_typedef)(x(Adresses::luah_next_addr));

using r_luah_resizearray_typedef = int(luah_resizearray_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luah_resizearray_typedef r_luah_resizearray = (r_luah_resizearray_typedef)(x(Adresses::luah_resizearray_addr));

using r_luah_set_typedef = int(luah_set_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luah_set_typedef r_luah_set = (r_luah_set_typedef)(x(Adresses::luah_set_addr));

using r_luah_setnum_typedef = int(luah_setnum_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luah_setnum_typedef r_luah_setnum = (r_luah_setnum_typedef)(x(Adresses::luah_setnum_addr));

using r_luah_setstr_typedef = int(luah_setstr_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luah_setstr_typedef r_luah_setstr = (r_luah_setstr_typedef)(x(Adresses::luah_setstr_addr));

using r_lual_addlstring_typedef = int(lual_addlstring_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lual_addlstring_typedef r_lual_addlstring = (r_lual_addlstring_typedef)(x(Adresses::lual_addlstring_addr));

using r_lual_addvalue_typedef = int(lual_addvalue_CCV*)(int a1);
r_lual_addvalue_typedef r_lual_addvalue = (r_lual_addvalue_typedef)(x(Adresses::lual_addvalue_addr));

using r_lual_argerror_typedef = int(lual_argerror_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lual_argerror_typedef r_lual_argerror = (r_lual_argerror_typedef)(x(Adresses::lual_argerror_addr));

using r_lual_buffinit_typedef = int(lual_buffinit_CCV*)(std::uintptr_t a1, int a2);
r_lual_buffinit_typedef r_lual_buffinit = (r_lual_buffinit_typedef)(x(Adresses::lual_buffinit_addr));

using r_lual_checkany_typedef = int(lual_checkany_CCV*)(std::uintptr_t a1, int a2);
r_lual_checkany_typedef r_lual_checkany = (r_lual_checkany_typedef)(x(Adresses::lual_checkany_addr));

using r_lual_checkinteger_typedef = int(lual_checkinteger_CCV*)(std::uintptr_t a1, int a2);
r_lual_checkinteger_typedef r_lual_checkinteger = (r_lual_checkinteger_typedef)(x(Adresses::lual_checkinteger_addr));

using r_lual_checklstring_typedef = int(lual_checklstring_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lual_checklstring_typedef r_lual_checklstring = (r_lual_checklstring_typedef)(x(Adresses::lual_checklstring_addr));

using r_lual_checknumber_typedef = int(lual_checknumber_CCV*)(std::uintptr_t a1, int a2);
r_lual_checknumber_typedef r_lual_checknumber = (r_lual_checknumber_typedef)(x(Adresses::lual_checknumber_addr));

using r_lual_checkstack_typedef = int(lual_checkstack_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lual_checkstack_typedef r_lual_checkstack = (r_lual_checkstack_typedef)(x(Adresses::lual_checkstack_addr));

using r_lual_checktype_typedef = int(lual_checktype_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lual_checktype_typedef r_lual_checktype = (r_lual_checktype_typedef)(x(Adresses::lual_checktype_addr));

using r_lual_checkunsigned_typedef = int(lual_checkunsigned_CCV*)(std::uintptr_t a1, int a2);
r_lual_checkunsigned_typedef r_lual_checkunsigned = (r_lual_checkunsigned_typedef)(x(Adresses::lual_checkunsigned_addr));

using r_lual_error_typedef = int(lual_error_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lual_error_typedef r_lual_error = (r_lual_error_typedef)(x(Adresses::lual_error_addr));

using r_lual_findtable_typedef = int(lual_findtable_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_lual_findtable_typedef r_lual_findtable = (r_lual_findtable_typedef)(x(Adresses::lual_findtable_addr));

using r_lual_getmetafield_typedef = int(lual_getmetafield_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lual_getmetafield_typedef r_lual_getmetafield = (r_lual_getmetafield_typedef)(x(Adresses::lual_getmetafield_addr));

using r_lual_newmetatable_typedef = int(lual_newmetatable_CCV*)(std::uintptr_t a1, int a2);
r_lual_newmetatable_typedef r_lual_newmetatable = (r_lual_newmetatable_typedef)(x(Adresses::lual_newmetatable_addr));

using r_lual_optinteger_typedef = int(lual_optinteger_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lual_optinteger_typedef r_lual_optinteger = (r_lual_optinteger_typedef)(x(Adresses::lual_optinteger_addr));

using r_lual_optlstring_typedef = int(lual_optlstring_CCV*)(std::uintptr_t a1, int a2, const char* a3, int a4);
r_lual_optlstring_typedef r_lual_optlstring = (r_lual_optlstring_typedef)(x(Adresses::lual_optlstring_addr));

using r_lual_prepbuffer_typedef = int(lual_prepbuffer_CCV*)(int a1);
r_lual_prepbuffer_typedef r_lual_prepbuffer = (r_lual_prepbuffer_typedef)(x(Adresses::lual_prepbuffer_addr));

using r_lual_pushresult_typedef = int(lual_pushresult_CCV*)(int a1);
r_lual_pushresult_typedef r_lual_pushresult = (r_lual_pushresult_typedef)(x(Adresses::lual_pushresult_addr));

using r_lual_ref_typedef = int(lual_ref_CCV*)(std::uintptr_t a1, int a2);
r_lual_ref_typedef r_lual_ref = (r_lual_ref_typedef)(x(Adresses::lual_ref_addr));

using r_lual_register_typedef = int(lual_register_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lual_register_typedef r_lual_register = (r_lual_register_typedef)(x(Adresses::lual_register_addr));

using r_lual_typeerror_typedef = int(lual_typeerror_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lual_typeerror_typedef r_lual_typeerror = (r_lual_typeerror_typedef)(x(Adresses::lual_typeerror_addr));

using r_lual_unref_typedef = int(lual_unref_CCV*)(std::uintptr_t a1, int a2, int a3);
r_lual_unref_typedef r_lual_unref = (r_lual_unref_typedef)(x(Adresses::lual_unref_addr));

using r_lual_where_typedef = int(lual_where_CCV*)(std::uintptr_t a1, int a2);
r_lual_where_typedef r_lual_where = (r_lual_where_typedef)(x(Adresses::lual_where_addr));

using r_luam_realloc_typedef = int(luam_realloc_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_luam_realloc_typedef r_luam_realloc = (r_luam_realloc_typedef)(x(Adresses::luam_realloc_addr));

using r_luam_realloc__typedef = int(luam_realloc__CCV*)(std::uintptr_t a1, int a2);
r_luam_realloc__typedef r_luam_realloc_ = (r_luam_realloc__typedef)(x(Adresses::luam_realloc__addr));

using r_luam_toobig_typedef = int(luam_toobig_CCV*)(int a1);
r_luam_toobig_typedef r_luam_toobig = (r_luam_toobig_typedef)(x(Adresses::luam_toobig_addr));

using r_luao_chunkid_typedef = int(luao_chunkid_CCV*)(char* a1, const char* a2, int a3);
r_luao_chunkid_typedef r_luao_chunkid = (r_luao_chunkid_typedef)(x(Adresses::luao_chunkid_addr));

using r_luao_pushfstring_typedef = int(luao_pushfstring_CCV*)(std::uintptr_t a1, const char* a2, ...);
r_luao_pushfstring_typedef r_luao_pushfstring = (r_luao_pushfstring_typedef)(x(Adresses::luao_pushfstring_addr));

using r_luao_pushvfstring_typedef = int(luao_pushvfstring_CCV*)(std::uintptr_t a1, const char* a2, char* a3);
r_luao_pushvfstring_typedef r_luao_pushvfstring = (r_luao_pushvfstring_typedef)(x(Adresses::luao_pushvfstring_addr));

using r_luao_rawequalKey_typedef = int(luao_rawequalKey_CCV*)(std::uintptr_t a1, int a2);
r_luao_rawequalKey_typedef r_luao_rawequalKey = (r_luao_rawequalKey_typedef)(x(Adresses::luao_rawequalKey_addr));

using r_luao_rawequalobj_typedef = int(luao_rawequalobj_CCV*)(std::uintptr_t a1, int a2);
r_luao_rawequalobj_typedef r_luao_rawequalobj = (r_luao_rawequalobj_typedef)(x(Adresses::luao_rawequalobj_addr));

using r_luao_str2d_typedef = int(luao_str2d_CCV*)(const char* a1, double* a2);
r_luao_str2d_typedef r_luao_str2d = (r_luao_str2d_typedef)(x(Adresses::luao_str2d_addr));

using r_luas_newlstr_typedef = int(luas_newlstr_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luas_newlstr_typedef r_luas_newlstr = (r_luas_newlstr_typedef)(x(Adresses::luas_newlstr_addr));

using r_luas_newudata_typedef = int(luas_newudata_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luas_newudata_typedef r_luas_newudata = (r_luas_newudata_typedef)(x(Adresses::luas_newudata_addr));

using r_luas_resize_typedef = int(luas_resize_CCV*)(std::uintptr_t a1, int a2);
r_luas_resize_typedef r_luas_resize = (r_luas_resize_typedef)(x(Adresses::luas_resize_addr));

using r_luat_gettm_typedef = int(luat_gettm_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luat_gettm_typedef r_luat_gettm = (r_luat_gettm_typedef)(x(Adresses::luat_gettm_addr));

using r_luat_objtypename_typedef = int(luat_objtypename_CCV*)(std::uintptr_t a1, int a2);
r_luat_objtypename_typedef r_luat_objtypename = (r_luat_objtypename_typedef)(x(Adresses::luat_objtypename_addr));

using r_luau_backtrace_typedef = int(luau_backtrace_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luau_backtrace_typedef r_luau_backtrace = (r_luau_backtrace_typedef)(x(Adresses::luau_backtrace_addr));

using r_luau_betavm_typedef = int(luau_betavm_CCV*)(int a1);
r_luau_betavm_typedef r_luau_betavm = (r_luau_betavm_typedef)(x(Adresses::luau_betavm_addr));

using r_luau_callhook_typedef = int(luau_callhook_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luau_callhook_typedef r_luau_callhook = (r_luau_callhook_typedef)unprotect(x(Adresses::luau_callhook_addr));

using r_luau_calltm_typedef = int(luau_calltm_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luau_calltm_typedef r_luau_calltm = (r_luau_calltm_typedef)(x(Adresses::luau_calltm_addr));

using r_luau_deserialize_typedef = int(luau_deserialize_CCV*)(std::uintptr_t a1, const char* a2, const char* a3, int a4);
r_luau_deserialize_typedef r_luau_deserialize = (r_luau_deserialize_typedef)(x(Adresses::luau_deserialize_addr));

using r_luau_execute_typedef = int(luau_execute_CCV*)(std::uintptr_t a1, int a2, int a3, int a4, int a5, int a6);
r_luau_execute_typedef r_luau_execute = (r_luau_execute_typedef)(x(Adresses::luau_execute_addr));

using r_luau_loopforg_typedef = int(luau_loopforg_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luau_loopforg_typedef r_luau_loopforg = (r_luau_loopforg_typedef)(x(Adresses::luau_loopforg_addr));

using r_luau_prepareforn_typedef = int(luau_prepareforn_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_luau_prepareforn_typedef r_luau_prepareforn = (r_luau_prepareforn_typedef)(x(Adresses::luau_prepareforn_addr));

using r_luau_resolveimport_typedef = int(luau_resolveimport_CCV*)(std::uintptr_t a1, int a2, int a3, int a4, int a5);
r_luau_resolveimport_typedef r_luau_resolveimport = (r_luau_resolveimport_typedef)(x(Adresses::luau_resolveimport_addr));

using r_luau_tryfunctm_typedef = int(luau_tryfunctm_CCV*)(std::uintptr_t a1, int a2);
r_luau_tryfunctm_typedef r_luau_tryfunctm = (r_luau_tryfunctm_typedef)(x(Adresses::luau_tryfunctm_addr));

using r_luav_concat_typedef = int(luav_concat_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luav_concat_typedef r_luav_concat = (r_luav_concat_typedef)(x(Adresses::luav_concat_addr));

using r_luav_doarith_typedef = int(luav_doarith_CCV*)(std::uintptr_t a1, int a2, int a3, int a4, int a5, int a6);
r_luav_doarith_typedef r_luav_doarith = (r_luav_doarith_typedef)(x(Adresses::luav_doarith_addr));

using r_luav_dolen_typedef = int(luav_dolen_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luav_dolen_typedef r_luav_dolen = (r_luav_dolen_typedef)(x(Adresses::luav_dolen_addr));

using r_luav_execute_typedef = int(luav_execute_CCV*)(int a1);
r_luav_execute_typedef r_luav_execute = (r_luav_execute_typedef)(x(Adresses::luav_execute_addr));

using r_luav_gettable_typedef = int(luav_gettable_CCV*)(std::uintptr_t a1, int a2, int a3, int a4, int a5);
r_luav_gettable_typedef r_luav_gettable = (r_luav_gettable_typedef)(x(Adresses::luav_gettable_addr));

using r_luav_gettable_opt_typedef = int(luav_gettable_opt_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_luav_gettable_opt_typedef r_luav_gettable_opt = (r_luav_gettable_opt_typedef)(x(Adresses::luav_gettable_opt_addr));

using r_luav_lessequal_typedef = int(luav_lessequal_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luav_lessequal_typedef r_luav_lessequal = (r_luav_lessequal_typedef)(x(Adresses::luav_lessequal_addr));

using r_luav_lessthan_typedef = int(luav_lessthan_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luav_lessthan_typedef r_luav_lessthan = (r_luav_lessthan_typedef)(x(Adresses::luav_lessthan_addr));

using r_luav_settable_typedef = int(luav_settable_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_luav_settable_typedef r_luav_settable = (r_luav_settable_typedef)(x(Adresses::luav_settable_addr));

using r_luav_tonumber_typedef = int(luav_tonumber_CCV*)(std::uintptr_t a1, int a2);
r_luav_tonumber_typedef r_luav_tonumber = (r_luav_tonumber_typedef)(x(Adresses::luav_tonumber_addr));

using r_luav_tostring_typedef = int(luav_tostring_CCV*)(std::uintptr_t a1, int a2);
r_luav_tostring_typedef r_luav_tostring = (r_luav_tostring_typedef)(x(Adresses::luav_tostring_addr));

using r_luavm_compile_typedef = int(luavm_compile_CCV*)(int a1);
r_luavm_compile_typedef r_luavm_compile = (r_luavm_compile_typedef)(x(Adresses::luavm_compile_addr));

using r_luavm_load_typedef = int(luavm_load_CCV*)(int a1, int a2, int a3);
r_luavm_load_typedef r_luavm_load = (r_luavm_load_typedef)(x(Adresses::luavm_load_addr));

using r_luax_init_typedef = int(luax_init_CCV*)(int a1);
r_luax_init_typedef r_luax_init = (r_luax_init_typedef)(x(Adresses::luax_init_addr));

using r_luaz_openspace_typedef = int(luaz_openspace_CCV*)(std::uintptr_t a1, int a2, int a3);
r_luaz_openspace_typedef r_luaz_openspace = (r_luaz_openspace_typedef)(x(Adresses::luaz_openspace_addr));

using r_mainposition_typedef = int(mainposition_CCV*)(std::uintptr_t a1, int a2);
r_mainposition_typedef r_mainposition = (r_mainposition_typedef)(x(Adresses::mainposition_addr));

using r_markmt_typedef = int(markmt_CCV*)(int a1);
r_markmt_typedef r_markmt = (r_markmt_typedef)(x(Adresses::markmt_addr));

using r_markroot_typedef = int(markroot_CCV*)(int a1);
r_markroot_typedef r_markroot = (r_markroot_typedef)(x(Adresses::markroot_addr));

using r_match_typedef = int(match_CCV*)(std::uintptr_t a1, int a2, int a3);
r_match_typedef r_match = (r_match_typedef)(x(Adresses::match_addr));

using r_newkey_typedef = int(newkey_CCV*)(std::uintptr_t a1, int a2, int a3);
r_newkey_typedef r_newkey = (r_newkey_typedef)(x(Adresses::newkey_addr));

using r_newlstr_typedef = int(newlstr_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_newlstr_typedef r_newlstr = (r_newlstr_typedef)(x(Adresses::newlstr_addr));

using r_print_typedef = int(print_CCV*)(int a1, int a2, int a3);
r_print_typedef r_print = (r_print_typedef)(x(Adresses::print_addr));

using r_push_captures_typedef = int(push_captures_CCV*)(std::uintptr_t a1, int a2, int a3);
r_push_captures_typedef r_push_captures = (r_push_captures_typedef)(x(Adresses::push_captures_addr));

using r_rbx_get_property_typedef = int(rbx_get_property_CCV*)(int a1, int a2);
r_rbx_get_property_typedef r_rbx_get_property = (r_rbx_get_property_typedef)(x(Adresses::rbx_get_property_addr));

using r_rbx_network_replicator_onreceive_typedef = int(rbx_network_replicator_onreceive_CCV*)(int a1, int a2, int a3);
r_rbx_network_replicator_onreceive_typedef r_rbx_network_replicator_onreceive = (r_rbx_network_replicator_onreceive_typedef)(x(Adresses::rbx_network_replicator_onreceive_addr));

using r_rbx_network_physicssenders2_sendpacket_typedef = int(rbx_network_physicssenders2_sendpacket_CCV*)(int a1, int a2, int a3);
r_rbx_network_physicssenders2_sendpacket_typedef r_rbx_network_physicssenders2_sendpacket = (r_rbx_network_physicssenders2_sendpacket_typedef)(x(Adresses::rbx_network_physicssenders2_sendpacket_addr));

using r_rbx_disable_report_screenshot_gl2_typedef = int(rbx_disable_report_screenshot_gl2_CCV*)();
r_rbx_disable_report_screenshot_gl2_typedef r_rbx_disable_report_screenshot_gl2 = (r_rbx_disable_report_screenshot_gl2_typedef)(x(Adresses::rbx_disable_report_screenshot_gl2_addr));

using r_rbx_disable_report_screenshot_gl_typedef = int(rbx_disable_report_screenshot_gl_CCV*)();
r_rbx_disable_report_screenshot_gl_typedef r_rbx_disable_report_screenshot_gl = (r_rbx_disable_report_screenshot_gl_typedef)(x(Adresses::rbx_disable_report_screenshot_gl_addr));

using r_rbx_disable_report_screenshot_metal_typedef = int(rbx_disable_report_screenshot_metal_CCV*)();
r_rbx_disable_report_screenshot_metal_typedef r_rbx_disable_report_screenshot_metal = (r_rbx_disable_report_screenshot_metal_typedef)(x(Adresses::rbx_disable_report_screenshot_metal_addr));

using r_rbx_disable_report_screenshot_vulkan_typedef = int(rbx_disable_report_screenshot_vulkan_CCV*)();
r_rbx_disable_report_screenshot_vulkan_typedef r_rbx_disable_report_screenshot_vulkan = (r_rbx_disable_report_screenshot_vulkan_typedef)(x(Adresses::rbx_disable_report_screenshot_vulkan_addr));

using r_rbx_disable_report_screenshot_d3d_typedef = int(rbx_disable_report_screenshot_d3d_CCV*)();
r_rbx_disable_report_screenshot_d3d_typedef r_rbx_disable_report_screenshot_d3d = (r_rbx_disable_report_screenshot_d3d_typedef)(x(Adresses::rbx_disable_report_screenshot_d3d_addr));

using r_rbx_setsimulationradius_typedef = int(rbx_setsimulationradius_CCV*)(int a1, int a2);
r_rbx_setsimulationradius_typedef r_rbx_setsimulationradius = (r_rbx_setsimulationradius_typedef)(x(Adresses::rbx_setsimulationradius_addr));

using r_rbx_corescript_getluavmcorescriptfilepath_typedef = int(rbx_corescript_getluavmcorescriptfilepath_CCV*)(int a1, int a2, const char* a3);
r_rbx_corescript_getluavmcorescriptfilepath_typedef r_rbx_corescript_getluavmcorescriptfilepath = (r_rbx_corescript_getluavmcorescriptfilepath_typedef)(x(Adresses::rbx_corescript_getluavmcorescriptfilepath_addr));

using r_rbx_datastore_runtransformfunction_typedef = int(rbx_datastore_runtransformfunction_CCV*)();
r_rbx_datastore_runtransformfunction_typedef r_rbx_datastore_runtransformfunction = (r_rbx_datastore_runtransformfunction_typedef)(x(Adresses::rbx_datastore_runtransformfunction_addr));

using r_rbx_datamodel_dodatamodelsetup_typedef = int(rbx_datamodel_dodatamodelsetup_CCV*)(int a1, int a2, int a3, int a4, int a5);
r_rbx_datamodel_dodatamodelsetup_typedef r_rbx_datamodel_dodatamodelsetup = (r_rbx_datamodel_dodatamodelsetup_typedef)(x(Adresses::rbx_datamodel_dodatamodelsetup_addr));

using r_rbx_debugvalueconverte_userdatatostring_typedef = int(rbx_debugvalueconverte_userdatatostring_CCV*)(int a1, int a2, int a3);
r_rbx_debugvalueconverte_userdatatostring_typedef r_rbx_debugvalueconverte_userdatatostring = (r_rbx_debugvalueconverte_userdatatostring_typedef)(x(Adresses::rbx_debugvalueconverte_userdatatostring_addr));

using r_rbx_deu_uploadcrasheventfile_typedef = int(rbx_deu_uploadcrasheventfile_CCV*)(int a1);
r_rbx_deu_uploadcrasheventfile_typedef r_rbx_deu_uploadcrasheventfile = (r_rbx_deu_uploadcrasheventfile_typedef)(x(Adresses::rbx_deu_uploadcrasheventfile_addr));

using r_rbx_lm_reporterror_typedef = int(rbx_lm_reporterror_CCV*)(int a1, int a2);
r_rbx_lm_reporterror_typedef r_rbx_lm_reporterror = (r_rbx_lm_reporterror_typedef)(x(Adresses::rbx_lm_reporterror_addr));

using r_rbx_lua_dumpthreadrefcounts_typedef = int(rbx_lua_dumpthreadrefcounts_CCV*)();
r_rbx_lua_dumpthreadrefcounts_typedef r_rbx_lua_dumpthreadrefcounts = (r_rbx_lua_dumpthreadrefcounts_typedef)(x(Adresses::rbx_lua_dumpthreadrefcounts_addr));

using r_rbx_network_replicator_processdeserializedpacket_typedef = int(rbx_network_replicator_processdeserializedpacket_CCV*)(int a1, int a2);
r_rbx_network_replicator_processdeserializedpacket_typedef r_rbx_network_replicator_processdeserializedpacket = (r_rbx_network_replicator_processdeserializedpacket_typedef)(x(Adresses::rbx_network_replicator_processdeserializedpacket_addr));

using r_rbx_network_server_registerlegalscript_typedef = int(rbx_network_server_registerlegalscript_CCV*)(int a1, int a2);
r_rbx_network_server_registerlegalscript_typedef r_rbx_network_server_registerlegalscript = (r_rbx_network_server_registerlegalscript_typedef)(x(Adresses::rbx_network_server_registerlegalscript_addr));

using r_rbx_rcr_processexception_typedef = int(rbx_rcr_processexception_CCV*)();
r_rbx_rcr_processexception_typedef r_rbx_rcr_processexception = (r_rbx_rcr_processexception_typedef)(x(Adresses::rbx_rcr_processexception_addr));

using r_rbx_sc_closestate_typedef = int(rbx_sc_closestate_CCV*)(int a1);
r_rbx_sc_closestate_typedef r_rbx_sc_closestate = (r_rbx_sc_closestate_typedef)(x(Adresses::rbx_sc_closestate_addr));

using r_rbx_taskscheduler_getlastcycletimestamp_typedef = int(rbx_taskscheduler_getlastcycletimestamp_CCV*)(int a1);
r_rbx_taskscheduler_getlastcycletimestamp_typedef r_rbx_taskscheduler_getlastcycletimestamp = (r_rbx_taskscheduler_getlastcycletimestamp_typedef)(x(Adresses::rbx_taskscheduler_getlastcycletimestamp_addr));

using r_rbx_lua_bridge_on_index_typedef = int(rbx_lua_bridge_on_index_CCV*)(int a1);
r_rbx_lua_bridge_on_index_typedef r_rbx_lua_bridge_on_index = (r_rbx_lua_bridge_on_index_typedef)(x(Adresses::rbx_lua_bridge_on_index_addr));

using r_rbx_security_context_current_typedef = int(rbx_security_context_current_CCV*)(int a1);
r_rbx_security_context_current_typedef r_rbx_security_context_current = (r_rbx_security_context_current_typedef)(x(Adresses::rbx_security_context_current_addr));

using r_rbx_datamodel_getjobsinfo_typedef = int(rbx_datamodel_getjobsinfo_CCV*)(int a1, int a2);
r_rbx_datamodel_getjobsinfo_typedef r_rbx_datamodel_getjobsinfo = (r_rbx_datamodel_getjobsinfo_typedef)(x(Adresses::rbx_datamodel_getjobsinfo_addr));

using r_rbx_sc_crash_typedef = int(rbx_sc_crash_CCV*)(int a1);
r_rbx_sc_crash_typedef r_rbx_sc_crash = (r_rbx_sc_crash_typedef)(x(Adresses::rbx_sc_crash_addr));

using r_rbx_sc_interrupt_typedef = int(rbx_sc_interrupt_CCV*)(int a1);
r_rbx_sc_interrupt_typedef r_rbx_sc_interrupt = (r_rbx_sc_interrupt_typedef)(x(Adresses::rbx_sc_interrupt_addr));

using r_rbx_sc_loadstring_typedef = int(rbx_sc_loadstring_CCV*)(int a1);
r_rbx_sc_loadstring_typedef r_rbx_sc_loadstring = (r_rbx_sc_loadstring_typedef)(x(Adresses::rbx_sc_loadstring_addr));

using r_rbx_sc_scriptcontext_typedef = int(rbx_sc_scriptcontext_CCV*)(int a1);
r_rbx_sc_scriptcontext_typedef r_rbx_sc_scriptcontext = (r_rbx_sc_scriptcontext_typedef)(x(Adresses::rbx_sc_scriptcontext_addr));

using r_rbx_sc_startscript_typedef = int(rbx_sc_startscript_CCV*)();
r_rbx_sc_startscript_typedef r_rbx_sc_startscript = (r_rbx_sc_startscript_typedef)(x(Adresses::rbx_sc_startscript_addr));

using r_rbx_sc_watchdog_typedef = int(rbx_sc_watchdog_CCV*)(int a1);
r_rbx_sc_watchdog_typedef r_rbx_sc_watchdog = (r_rbx_sc_watchdog_typedef)(x(Adresses::rbx_sc_watchdog_addr));

using r_rbx_scriptcontext_getcontext_typedef = int(rbx_scriptcontext_getcontext_CCV*)(int a1);
r_rbx_scriptcontext_getcontext_typedef r_rbx_scriptcontext_getcontext = (r_rbx_scriptcontext_getcontext_typedef)(x(Adresses::rbx_scriptcontext_getcontext_addr));

using r_rbx_scriptcontext_debuggermanager_typedef = int(rbx_scriptcontext_debuggermanager_CCV*)(int a1);
r_rbx_scriptcontext_debuggermanager_typedef r_rbx_scriptcontext_debuggermanager = (r_rbx_scriptcontext_debuggermanager_typedef)(x(Adresses::rbx_scriptcontext_debuggermanager_addr));

using r_rbx_scriptcontext_pluginmanager_typedef = int(rbx_scriptcontext_pluginmanager_CCV*)(int a1);
r_rbx_scriptcontext_pluginmanager_typedef r_rbx_scriptcontext_pluginmanager = (r_rbx_scriptcontext_pluginmanager_typedef)(x(Adresses::rbx_scriptcontext_pluginmanager_addr));

using r_rbx_scriptcontext_usersettings_typedef = int(rbx_scriptcontext_usersettings_CCV*)(int a1);
r_rbx_scriptcontext_usersettings_typedef r_rbx_scriptcontext_usersettings = (r_rbx_scriptcontext_usersettings_typedef)(x(Adresses::rbx_scriptcontext_usersettings_addr));

using r_rbx_scriptcontext_settings_typedef = int(rbx_scriptcontext_settings_CCV*)(int a1);
r_rbx_scriptcontext_settings_typedef r_rbx_scriptcontext_settings = (r_rbx_scriptcontext_settings_typedef)(x(Adresses::rbx_scriptcontext_settings_addr));

using r_rbx_scriptcontext_getglobalstate_typedef = int(rbx_scriptcontext_getglobalstate_CCV*)(int a1);
r_rbx_scriptcontext_getglobalstate_typedef r_rbx_scriptcontext_getglobalstate = (r_rbx_scriptcontext_getglobalstate_typedef)(x(Adresses::rbx_scriptcontext_getglobalstate_addr));

using r_rbx_modulescript_vmstate_typedef = int(rbx_modulescript_vmstate_CCV*)(int a1);
r_rbx_modulescript_vmstate_typedef r_rbx_modulescript_vmstate = (r_rbx_modulescript_vmstate_typedef)(x(Adresses::rbx_modulescript_vmstate_addr));

using r_rbx_modulescript_pervmstate_setcompletedsuccess_typedef = int(rbx_modulescript_pervmstate_setcompletedsuccess_CCV*)(int a1, int a2, int a3);
r_rbx_modulescript_pervmstate_setcompletedsuccess_typedef r_rbx_modulescript_pervmstate_setcompletedsuccess = (r_rbx_modulescript_pervmstate_setcompletedsuccess_typedef)(x(Adresses::rbx_modulescript_pervmstate_setcompletedsuccess_addr));

using r_rbx_modulescript_pervmstate_getandclearyieldedimporters_typedef = int(rbx_modulescript_pervmstate_getandclearyieldedimporters_CCV*)(int a1, int a2);
r_rbx_modulescript_pervmstate_getandclearyieldedimporters_typedef r_rbx_modulescript_pervmstate_getandclearyieldedimporters = (r_rbx_modulescript_pervmstate_getandclearyieldedimporters_typedef)(x(Adresses::rbx_modulescript_pervmstate_getandclearyieldedimporters_addr));

using r_rbx_scriptcontext_requiremodulescriptsuccesscontinuation_typedef = int(rbx_scriptcontext_requiremodulescriptsuccesscontinuation_CCV*)(int a1, int a2, int a3);
r_rbx_scriptcontext_requiremodulescriptsuccesscontinuation_typedef r_rbx_scriptcontext_requiremodulescriptsuccesscontinuation = (r_rbx_scriptcontext_requiremodulescriptsuccesscontinuation_typedef)(x(Adresses::rbx_scriptcontext_requiremodulescriptsuccesscontinuation_addr));

using r_rbx_setthreadname_typedef = int(rbx_setthreadname_CCV*)(int a1);
r_rbx_setthreadname_typedef r_rbx_setthreadname = (r_rbx_setthreadname_typedef)(x(Adresses::rbx_setthreadname_addr));

using r_rbx_serializer_loadinstances_typedef = int(rbx_serializer_loadinstances_CCV*)(int a1, int a2);
r_rbx_serializer_loadinstances_typedef r_rbx_serializer_loadinstances = (r_rbx_serializer_loadinstances_typedef)(x(Adresses::rbx_serializer_loadinstances_addr));

using r_rbx_scriptcontext_printcallstack_typedef = int(rbx_scriptcontext_printcallstack_CCV*)(int a1, int a2, const char* a3, int a4);
r_rbx_scriptcontext_printcallstack_typedef r_rbx_scriptcontext_printcallstack = (r_rbx_scriptcontext_printcallstack_typedef)(x(Adresses::rbx_scriptcontext_printcallstack_addr));

using r_rbx_serializer_loadinstances_long_typedef = int(rbx_serializer_loadinstances_long_CCV*)(int a1, int a2, int a3);
r_rbx_serializer_loadinstances_long_typedef r_rbx_serializer_loadinstances_long = (r_rbx_serializer_loadinstances_long_typedef)(x(Adresses::rbx_serializer_loadinstances_long_addr));

using r_rbx_standardout_printwithlink_typedef = int(rbx_standardout_printwithlink_CCV*)(int a1, int a2, int a3, int a4);
r_rbx_standardout_printwithlink_typedef r_rbx_standardout_printwithlink = (r_rbx_standardout_printwithlink_typedef)(x(Adresses::rbx_standardout_printwithlink_addr));

using r_rbx_ts_startscript_typedef = int(rbx_ts_startscript_CCV*)(int a1, int a2);
r_rbx_ts_startscript_typedef r_rbx_ts_startscript = (r_rbx_ts_startscript_typedef)(x(Adresses::rbx_ts_startscript_addr));

using r_rbx_ws_getrealphysicsfps_typedef = int(rbx_ws_getrealphysicsfps_CCV*)(int a1);
r_rbx_ws_getrealphysicsfps_typedef r_rbx_ws_getrealphysicsfps = (r_rbx_ws_getrealphysicsfps_typedef)(x(Adresses::rbx_ws_getrealphysicsfps_addr));

using r_rbxcrash_typedef = int(rbxcrash_CCV*)(int a1, int a2);
r_rbxcrash_typedef r_rbxcrash = (r_rbxcrash_typedef)(x(Adresses::rbxcrash_addr));

using r_reallymarkobject_typedef = int(reallymarkobject_CCV*)(std::uintptr_t a1, int a2);
r_reallymarkobject_typedef r_reallymarkobject = (r_reallymarkobject_typedef)(x(Adresses::reallymarkobject_addr));

using r_rehash_typedef = int(rehash_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_rehash_typedef r_rehash = (r_rehash_typedef)(x(Adresses::rehash_addr));

using r_reportError_typedef = int(reportError_CCV*)(int a1, int a2);
r_reportError_typedef r_reportError = (r_reportError_typedef)(x(Adresses::reportError_addr));

using r_resize_typedef = int(resize_CCV*)(std::uintptr_t a1, int a2, int a3, int a4);
r_resize_typedef r_resize = (r_resize_typedef)(x(Adresses::resize_addr));

using r_resume_typedef = int(resume_CCV*)(std::uintptr_t a1, int a2);
r_resume_typedef r_resume = (r_resume_typedef)(x(Adresses::resume_addr));

using r_resume_error_typedef = int(resume_error_CCV*)(int a1, const char* a2);
r_resume_error_typedef r_resume_error = (r_resume_error_typedef)unprotect(x(Adresses::resume_error_addr));

using r_retcheck_typedef = int(retcheck_CCV*)(int a1, int a2);
r_retcheck_typedef r_retcheck = (r_retcheck_typedef)(x(Adresses::retcheck_addr));

using r_robloxextraspace__robloxextraspace_typedef = int(robloxextraspace__robloxextraspace_CCV*)(int a1, int a2);
r_robloxextraspace__robloxextraspace_typedef r_robloxextraspace__robloxextraspace = (r_robloxextraspace__robloxextraspace_typedef)(x(Adresses::robloxextraspace__robloxextraspace_addr));

using r_sandboxthread_typedef = int(sandboxthread_CCV*)(int a1, int a2, int a3);
r_sandboxthread_typedef r_sandboxthread = (r_sandboxthread_typedef)(x(Adresses::sandboxthread_addr));

using r_setarrayvector_typedef = int(setarrayvector_CCV*)(std::uintptr_t a1, int a2, int a3);
r_setarrayvector_typedef r_setarrayvector = (r_setarrayvector_typedef)(x(Adresses::setarrayvector_addr));

using r_setnodevector_typedef = int(setnodevector_CCV*)(std::uintptr_t a1, int a2, int a3);
r_setnodevector_typedef r_setnodevector = (r_setnodevector_typedef)(x(Adresses::setnodevector_addr));

using r_singlestep_typedef = int(singlestep_CCV*)(int a1);
r_singlestep_typedef r_singlestep = (r_singlestep_typedef)(x(Adresses::singlestep_addr));

using r_spawn_typedef = int(spawn_CCV*)(int a1);
r_spawn_typedef r_spawn = (r_spawn_typedef)(x(Adresses::spawn_addr));

using r_stack_init_typedef = int(stack_init_CCV*)(std::uintptr_t a1, int a2);
r_stack_init_typedef r_stack_init = (r_stack_init_typedef)(x(Adresses::stack_init_addr));

using r_str_find_aux_typedef = int(str_find_aux_CCV*)(std::uintptr_t a1, int a2);
r_str_find_aux_typedef r_str_find_aux = (r_str_find_aux_typedef)(x(Adresses::str_find_aux_addr));

using r_tag_error_typedef = int(tag_error_CCV*)(std::uintptr_t a1, int a2, int a3);
r_tag_error_typedef r_tag_error = (r_tag_error_typedef)(x(Adresses::tag_error_addr));

using r_trustCheck_typedef = int(trustCheck_CCV*)(const char* a1, char* a2,  int a3);
r_trustCheck_typedef r_trustCheck = (r_trustCheck_typedef)(x(Adresses::trustCheck_addr));

using r_taskscheduler_typedef = int(taskscheduler_CCV*)();
r_taskscheduler_typedef r_taskscheduler = (r_taskscheduler_typedef)(x(Adresses::taskscheduler_addr));

using r_unbound_search_typedef = int(unbound_search_CCV*)(std::uintptr_t a1, int a2);
r_unbound_search_typedef r_unbound_search = (r_unbound_search_typedef)(x(Adresses::unbound_search_addr));

using r_vm_invoker_typedef = int(vm_invoker_CCV*)(int a1);
r_vm_invoker_typedef r_vm_invoker = (r_vm_invoker_typedef)(x(Adresses::vm_invoker_addr));


